name: Deploy to Azure

on:
  push:
    branches: [ "autentication" ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create Firebase environment files
        # This approach creates the environment files directly, bypassing config-env.ts
        run: |
          mkdir -p src/environments
          
          # Create environment.ts
          cat > src/environments/environment.ts << EOF
          // This file was auto-generated by the Firebase CLI
          // https://github.com/firebase/firebase-tools

          export const environment = {
            production: false,
            apiUrl: 'https://ionic-cheese-back.onrender.com/api',
            useEmulators: false,
            firebase: {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}",
              measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
            }
          };
          EOF
          
          # Create environment.prod.ts
          cat > src/environments/environment.prod.ts << EOF
          // This file was auto-generated by the Firebase CLI
          // https://github.com/firebase/firebase-tools

          export const environment = {
            production: true,
            apiUrl: 'https://ionic-cheese-back.onrender.com/api',
            useEmulators: false,
            firebase: {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}",
              measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
            }
          };
          EOF
          
          echo "Created environment files"
          ls -la src/environments/

      - name: Build Ionic app
        run: npx ionic build --prod

      - name: Create web.config for Azure
        run: |
          # Create web.config for Angular SPA routing
          cat > www/web.config << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <configuration>
            <system.webServer>
              <rewrite>
                <rules>
                  <rule name="Angular Routes" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/index.html" />
                  </rule>
                </rules>
              </rewrite>
              <staticContent>
                <mimeMap fileExtension=".webp" mimeType="image/webp" />
                <mimeMap fileExtension=".json" mimeType="application/json" />
              </staticContent>
            </system.webServer>
          </configuration>
          EOF
          
          echo "Created web.config file for Azure"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0F9D2722DF2D44B0AB3275506E818DB8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0847DB209E4D438697D0ADACAA3379AA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1D6FC8EE1CA84AB0957F563BC6CE5BC2 }}

      - name: Deploy to Azure Web App
        id: deploy-to-azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cheese-front'
          slot-name: 'Production'
          package: www

      - name: Logout from Azure
        run: az logout
        if: always()
