name: Deploy to Azure

on:
  push:
    branches: [ autentication ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create environment files
      run: |
        # Crear directament els fitxers d'entorn amb les variables de GitHub Secrets
        mkdir -p src/environments
        
        # Fitxer environment.ts
        cat > src/environments/environment.ts << EOF
        export const environment = {
          production: false,
          apiUrl: 'https://ionic-cheese-back.onrender.com/api',
          useEmulators: false,
          firebase: {
            apiKey: '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
            storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: '${{ secrets.FIREBASE_APP_ID }}',
            measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}',
          },
        };
        EOF
        
        # Fitxer environment.prod.ts
        cat > src/environments/environment.prod.ts << EOF
        export const environment = {
          production: true,
          apiUrl: 'https://ionic-cheese-back.onrender.com/api',
          useEmulators: false,
          firebase: {
            apiKey: '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
            storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: '${{ secrets.FIREBASE_APP_ID }}',
            measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}',
          },
        };
        EOF
        
        echo "Environment files created successfully"

    - name: Build Ionic app directly
      run: |
        # Construeix l'app saltant el config-env
        npx ionic build --configuration=production --no-interactive
    
    - name: Create web.config for Azure
      run: |
        cat > ./www/web.config << EOF
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <rewrite>
              <rules>
                <rule name="Angular Routes" stopProcessing="true">
                  <match url=".*" />
                  <conditions logicalGrouping="MatchAll">
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="/" />
                </rule>
              </rules>
            </rewrite>
            <staticContent>
              <mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />
            </staticContent>
          </system.webServer>
        </configuration>
        EOF
    
    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ionic-cheese'
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./www