name: Build and deploy Ionic app to Azure Web App

# IMPORTANT: Before using this workflow, you need to add the following secrets to your repository:
# - FIREBASE_API_KEY: Your Firebase API Key
# - FIREBASE_AUTH_DOMAIN: Your Firebase Auth Domain
# - FIREBASE_PROJECT_ID: Your Firebase Project ID
# - FIREBASE_STORAGE_BUCKET: Your Firebase Storage Bucket
# - FIREBASE_MESSAGING_SENDER_ID: Your Firebase Messaging Sender ID
# - FIREBASE_APP_ID: Your Firebase App ID
# - FIREBASE_MEASUREMENT_ID: Your Firebase Measurement ID
#
# You can add these secrets in your repository settings:
# Settings > Secrets and variables > Actions > New repository secret

on:
  push:
    branches:
      - autentication
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file with Firebase secrets
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          cat .env

      - name: Run environment configuration
        run: npx ts-node config-env.ts

      - name: Build app for production
        run: npm run build:prod

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ionic-app-build
          path: www
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ionic-app-build
          path: www

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0F9D2722DF2D44B0AB3275506E818DB8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0847DB209E4D438697D0ADACAA3379AA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1D6FC8EE1CA84AB0957F563BC6CE5BC2 }}

      - name: Configure web.config for SPA routing
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > www/web.config
          echo '<configuration>' >> www/web.config
          echo '  <system.webServer>' >> www/web.config
          echo '    <rewrite>' >> www/web.config
          echo '      <rules>' >> www/web.config
          echo '        <rule name="Angular Routes" stopProcessing="true">' >> www/web.config
          echo '          <match url=".*" />' >> www/web.config
          echo '          <conditions logicalGrouping="MatchAll">' >> www/web.config
          echo '            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />' >> www/web.config
          echo '            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />' >> www/web.config
          echo '          </conditions>' >> www/web.config
          echo '          <action type="Rewrite" url="/index.html" />' >> www/web.config
          echo '        </rule>' >> www/web.config
          echo '      </rules>' >> www/web.config
          echo '    </rewrite>' >> www/web.config
          echo '    <staticContent>' >> www/web.config
          echo '      <mimeMap fileExtension=".webp" mimeType="image/webp" />' >> www/web.config
          echo '      <mimeMap fileExtension=".json" mimeType="application/json" />' >> www/web.config
          echo '    </staticContent>' >> www/web.config
          echo '  </system.webServer>' >> www/web.config
          echo '</configuration>' >> www/web.config

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "cheese-front"
          slot-name: "Production"
          package: www

      - name: Logout from Azure
        run: az logout
        if: always()
